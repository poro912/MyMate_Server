


create table user_tb(
U_code int,
U_id varchar(12) not null unique,
U_password varchar(15) not null,
 U_Nickname varchar(12) ,
 U_name varchar(10) not null,
 U_phone varchar(15) not null unique,
 U_login_time datetime,
primary key(U_code)
);


create table FRIEND_TB(
  U_code int ,
   FR_code int,
FR_name varchar(10) not null, 
  FR_Nickname varchar(12),
  FR_hide bool,
  FR_block bool,
Primary key(U_code,FR_code),
 foreign key(U_code) references USER_TB(U_code)
);


create table U_ck_tb(
U_CK_code int,
U_code int,
U_CK_name varchar(15),
  U_CK_content varchar(500),
  U_CK_time datetime,
  U_CK_private bool,
primary key(U_code,U_CK_code),
 foreign key(U_code) references USER_TB(U_code)
);

create table U_CL_tb(
U_CL_code int,
U_code int,
U_CL_name varchar(15),
  U_CL_content varchar(500),
  U_CL_time datetime,
  U_CL_private bool,
primary key(U_code,U_CL_code),
 foreign key(U_code) references USER_TB(U_code)
);
create table SERVER_TB(
S_code int,
S_join_code int,
S_join_URL varchar(100),
primary key(S_code)
);

create table server_join_tb(
S_code int,
U_code int ,
primary key(U_code,s_code),
foreign key(S_code) references SERVER_TB(S_code),
 foreign key(U_code) references USER_TB(U_code)
);


create table S_perm_TB(
  S_code int ,
  S_perm_code int,
  S_perm_001 int ,
  S_perm_002 int ,
  S_perm_003 int, 
primary key(S_perm_code,s_code),
foreign key(S_code) references SERVER_TB(S_code)
);

create table Chennel_TB(
CH_code int,
CH_name varchar(10),
  CH_perm_code int,
primary key(CH_code)
);
create Table Ch_join_TB(
  CH_code int,
  S_code int,
primary key(S_code,CH_code),
foreign key(cH_code) references Chennel_TB(cH_code),
foreign key(S_code) references SERVER_TB(S_code)
);

create Table CH_perm_TB(
  CH_code int,
  CH_perm_code int,
  CH_perm_001 int,
  CH_perm_002 int,
  CH_perm_003 int,
primary  key(CH_code, CH_perm_code),
foreign key(cH_code) references Chennel_TB(cH_code)
);

create Table CH_CK_info_TB(
  CH_code int,
 CH_CK_code int,
 CH_CK_name varchar(15),
  CH_CK_content varchar(500),
  CH_CK_time datetime,
  CH_CK_private bool,
primary key(CH_code,CH_CK_code),
foreign key(cH_code) references Chennel_TB(cH_code)
);

create Table CH_CL_info_TB(
  CH_code int,
 CH_CL_code int,
 CH_CL_name varchar(15),
  CH_CL_content varchar(500),
  CH_CL_time datetime,
  CH_CL_private bool,
primary key(CH_code,CH_CL_code),
foreign key(cH_code) references Chennel_TB(cH_code)
);

create Table CH_msg_TB(
  CH_code int,
  MSG_code int, 
  U_code   int,
MSG_time datetime,
primary key(Ch_code, msg_code, U_code),
foreign key(CH_code) references Chennel_TB(CH_code),
foreign key(U_code) references USER_TB(U_code)
);

create table seq_table(
code int unsigned,
name varchar(32) not null);$$


Delimiter $$
 create procedure create_seq(in the_name text)
 modifies sql data
 deterministic 
 begin
 insert into seq_table values(0, the_name);
 end
$$
call create_seq("user_code");$$


DELIMITER $$
CREATE FUNCTION get_seq (the_name VARCHAR(32))
RETURNS int unsigned
modifies sql data
Deterministic
BEGIN
DECLARE RESULT_code int unsigned;
update seq_table set code = (code +1) where name = the_name;
select code into result_code from seq_table where name =the_name Limit 1;
return RESULT_code;
END $$


DELIMITER $$
CREATE procedure Pro_user_in(
U_in_id varchar(12),
U_in_pw varchar(15),
U_in_Nick varchar(12),
U_in_name varchar(10),
U_in_phone varchar(15),
U_in_logintime datetime 
)
begin
insert into User_tb values((select get_seq('user_code')), U_in_id ,U_in_pw ,U_in_Nick ,U_in_name ,U_in_phone ,U_in_logintime);
END $$

call Pro_user_in('test','qwe123',null,'testID','010-9226-0219',null);$$

DELIMITER $$
CREATE FUNCTION F_login (Login_id VARCHAR(12),Login_pw varchar(15))
RETURNS bool

DETERMINISTIC
BEGIN
DECLARE re_val bit;
Declare compare_pw varchar(15);
Declare compare_id varchar(12);
set re_val = false;

select u_id into compare_id from user_tb where u_id = Login_id;

if compare_id is null then
return re_val;
end if;


select U_password into compare_pw from user_tb where U_id = Login_id;
if compare_pw = login_pw then
set re_val = true;
end if;

update user_tb set U_login_time = (select sysdate()) where U_id = login_id;
return re_val;
END $$

select F_login('test','qwe123');

DELIMITER $$
CREATE procedure p_pr_sel (P_U_id varchar(12))

DETERMINISTIC
BEGIN
select U_nickname, U_name , U_phone from user_Tb where U_id = P_U_id;

END $$


DELIMITER $$
CREATE procedure p_set_sel (P_U_id varchar(12))

DETERMINISTIC
BEGIN
select U_id, U_password , U_nickname , U_name , U_phone  from user_tb where U_id = P_U_id;
END $$

DELIMITER $$
CREATE procedure p_set_up (P_U_id varchar(12), p_password varchar(15), p_Nick varchar(12),p_name varchar(10) , p_phone varchar(15) )

DETERMINISTIC
BEGIN
update User_tb set U_password = p_password where U_id = P_U_id;
update User_tb set U_Nickname = p_Nickname where U_id = P_U_id;
update User_tb set U_name = p_name where U_id = P_U_id;
update User_tb set U_phone = p_phone where U_id = P_U_id;

END $$


DELIMITER $$
CREATE procedure p_set_up_Nick (P_U_id varchar(12), p_U_nick varchar(12))
DETERMINISTIC
BEGIN
update User_tb set U_Nickname = P_U_Nick where U_id = P_U_id;
END $$
 
DELIMITER $$
CREATE procedure p_set_up_name (P_U_id varchar(12), p_U_name varchar(10))
DETERMINISTIC
BEGIN
update User_tb set U_name = P_U_name where U_id = P_U_id;
END $$
 
DELIMITER $$
CREATE procedure p_set_up_phone (P_U_id varchar(12), p_U_phone varchar(15))
DETERMINISTIC
BEGIN
update User_tb set U_phone = P_U_phone where U_id = P_U_id;
END $$















































